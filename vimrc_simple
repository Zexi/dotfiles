" set the runtime path to include Vundle and initialize
call plug#begin('~/.vim/plugged')

" let Vundle manage Vundle, required
Plug 'Valloric/YouCompleteMe'
Plug 'kien/ctrlp.vim'
Plug 'jiangmiao/auto-pairs'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'tpope/vim-surround'
Plug 'christoomey/vim-tmux-navigator'
"Plug 'edkolev/tmuxline.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'majutsushi/tagbar'
Plug 'fatih/vim-go'
Plug 'kien/rainbow_parentheses.vim'
Plug 'wlangstroth/vim-racket'
Plug 'morhetz/gruvbox'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'ntpeters/vim-better-whitespace'
Plug 'xolox/vim-misc'
Plug 'xolox/vim-easytags'
Plug 'rking/ag.vim'
Plug 'tpope/vim-repeat'

" All of your Plugins must be added before the following line
call plug#end()    " required
filetype plugin indent on " required

set wildmenu
set wildmode=full
set history=1000
set number
set showcmd

set hls
set hidden
set incsearch
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>

filetype plugin on
nnoremap k gk
nnoremap gk k
nnoremap j gj
nnoremap gj j

" conf of default YCM
let g:ycm_global_ycm_extra_conf = '/Users/lzx/.ycm_extra_conf.py'
nnoremap <leader>gl :YcmCompleter GoToDefinition<CR>
nnoremap <leader>jd :YcmCompleter GoTo<CR>
let g:ycm_complete_in_comments = 1
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_autoclose_preview_window_after_completion = 1

syntax on
set background=dark
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox
if has('gui_running')
	set guioptions-=T
	set guioptions-=m
	set guifont=Monaco:h15
else
	highlight Comment ctermfg=lightblue cterm=none
endif
"colorscheme space-vim-dark

" conf for vim-ruby
filetype on           " Enable filetype detection
filetype plugin on    " Enable filetype-specific plugins
autocmd FileType ruby,yaml,eruby setlocal expandtab shiftwidth=2 tabstop=2
let g:user_emmet_install_global = 0
autocmd FileType html,css setlocal expandtab shiftwidth=2 tabstop=2 smartindent smarttab softtabstop=2
autocmd FileType html,css EmmetInstall
autocmd FileType sh,expect setlocal expandtab shiftwidth=4 tabstop=4 smartindent
autocmd FileType c,cpp,dot setlocal sw=4 tabstop=4 cindent
autocmd FileType python,go,javascript,java setlocal expandtab tabstop=4 shiftwidth=4 smarttab softtabstop=4
autocmd FileType tex,markdown setlocal expandtab tabstop=2 shiftwidth=2 smarttab softtabstop=2

" conf for airline
set laststatus=2
" let g:Powerline_symbols='unicode'
let g:tmuxline_powerline_separators = 0
"let g:airline_theme='durant'

" conf for Ag
let g:ag_prg="/usr/local/bin/ag --vimgrep"

" conf for ctags
let g:ctags_statusline=1

" conf for flake8
let g:flake8_ignore='W291,W391,E123,E124,E125,E126,E127,E128,E221,E225,E226,E261,E262,E272,E302,E501,E502'
"autocmd BufWritePost *.py call Flake8()

" conf for window split
" We can use different key mappings for easy navigation between splits to save
" a keystroke. So instead of ctrl-w then j, it’s just ctrl-j
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Open new split panes to right and bottom, which feels more natural than
" Vim’s default:
set splitbelow
set splitright

" config for buffer
"map <C-z> :bp<cr>
"map <C-x> :bn<cr>

" for vim-indent-guides
let g:indent_guides_guide_size = 1
let g:indent_guides_start_level = 2

" sudo write
cmap w!! w !sudo tee % >/dev/null

" for ctrlp
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

" racket
if has("autocmd")
  au BufReadPost *.rkt,*.rktl,*.scm set filetype=racket
  au filetype racket set lisp
  au filetype racket set autoindent
endif

" rainbow_parentheses
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" easytags
let g:easytags_auto_update = 0
let g:easytags_auto_highlight = 0
let g:easytags_events = ['BufWritePost']
let g:easytags_async = 1

" make exiting to normal mode a bit easier
imap jj <ESC>
imap kk <ESC>
